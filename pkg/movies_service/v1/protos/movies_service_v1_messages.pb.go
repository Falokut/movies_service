// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: movies_service_v1_messages.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieID string `protobuf:"bytes,1,opt,name=movieID,json=movie_id,proto3" json:"movieID,omitempty"`
}

func (x *GetMovieRequest) Reset() {
	*x = GetMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movies_service_v1_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieRequest) ProtoMessage() {}

func (x *GetMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movies_service_v1_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieRequest.ProtoReflect.Descriptor instead.
func (*GetMovieRequest) Descriptor() ([]byte, []int) {
	return file_movies_service_v1_messages_proto_rawDescGZIP(), []int{0}
}

func (x *GetMovieRequest) GetMovieID() string {
	if x != nil {
		return x.MovieID
	}
	return ""
}

// for multiple values use ',' separator
type GetMoviesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MoviesIDs    *string `protobuf:"bytes,1,opt,name=moviesIDs,json=movies_ids,proto3,oneof" json:"moviesIDs,omitempty"`
	GenresIDs    *string `protobuf:"bytes,2,opt,name=genresIDs,json=genres_ids,proto3,oneof" json:"genresIDs,omitempty"`
	DirectorsIDs *string `protobuf:"bytes,3,opt,name=directorsIDs,json=directors_ids,proto3,oneof" json:"directorsIDs,omitempty"`
	CountriesIDs *string `protobuf:"bytes,4,opt,name=countriesIDs,json=country_ids,proto3,oneof" json:"countriesIDs,omitempty"`
	Title        *string `protobuf:"bytes,5,opt,name=title,proto3,oneof" json:"title,omitempty"`
	// if limit = 0, will be used default limit = 10, if bigger than 100, will be used max limit = 100
	Limit  uint32 `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetMoviesRequest) Reset() {
	*x = GetMoviesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movies_service_v1_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMoviesRequest) ProtoMessage() {}

func (x *GetMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movies_service_v1_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMoviesRequest.ProtoReflect.Descriptor instead.
func (*GetMoviesRequest) Descriptor() ([]byte, []int) {
	return file_movies_service_v1_messages_proto_rawDescGZIP(), []int{1}
}

func (x *GetMoviesRequest) GetMoviesIDs() string {
	if x != nil && x.MoviesIDs != nil {
		return *x.MoviesIDs
	}
	return ""
}

func (x *GetMoviesRequest) GetGenresIDs() string {
	if x != nil && x.GenresIDs != nil {
		return *x.GenresIDs
	}
	return ""
}

func (x *GetMoviesRequest) GetDirectorsIDs() string {
	if x != nil && x.DirectorsIDs != nil {
		return *x.DirectorsIDs
	}
	return ""
}

func (x *GetMoviesRequest) GetCountriesIDs() string {
	if x != nil && x.CountriesIDs != nil {
		return *x.CountriesIDs
	}
	return ""
}

func (x *GetMoviesRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *GetMoviesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetMoviesRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type Movie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieID      string  `protobuf:"bytes,1,opt,name=movieID,json=movie_id,proto3" json:"movieID,omitempty"`
	Plot         string  `protobuf:"bytes,2,opt,name=plot,proto3" json:"plot,omitempty"`
	TitleRU      string  `protobuf:"bytes,3,opt,name=titleRU,json=title_ru,proto3" json:"titleRU,omitempty"`
	TitleEN      string  `protobuf:"bytes,4,opt,name=titleEN,json=title_en,proto3" json:"titleEN,omitempty"`
	Budget       string  `protobuf:"bytes,5,opt,name=budget,proto3" json:"budget,omitempty"`
	CastID       int32   `protobuf:"varint,6,opt,name=castID,json=cast_id,proto3" json:"castID,omitempty"`
	GenresIDs    []int32 `protobuf:"varint,7,rep,packed,name=genresIDs,json=genres_ids,proto3" json:"genresIDs,omitempty"`
	DirectorsIDs []int32 `protobuf:"varint,8,rep,packed,name=directorsIDs,json=directors_ids,proto3" json:"directorsIDs,omitempty"`
	// movie duration in minutes
	Duration         int32   `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"`
	CountriesIDs     []int32 `protobuf:"varint,19,rep,packed,name=countriesIDs,json=country_ids,proto3" json:"countriesIDs,omitempty"`
	PosterPictureURL string  `protobuf:"bytes,11,opt,name=posterPictureURL,json=poster_picture_url,proto3" json:"posterPictureURL,omitempty"`
	ReleaseYear      int32   `protobuf:"varint,12,opt,name=releaseYear,json=release_year,proto3" json:"releaseYear,omitempty"`
}

func (x *Movie) Reset() {
	*x = Movie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movies_service_v1_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Movie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movie) ProtoMessage() {}

func (x *Movie) ProtoReflect() protoreflect.Message {
	mi := &file_movies_service_v1_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movie.ProtoReflect.Descriptor instead.
func (*Movie) Descriptor() ([]byte, []int) {
	return file_movies_service_v1_messages_proto_rawDescGZIP(), []int{2}
}

func (x *Movie) GetMovieID() string {
	if x != nil {
		return x.MovieID
	}
	return ""
}

func (x *Movie) GetPlot() string {
	if x != nil {
		return x.Plot
	}
	return ""
}

func (x *Movie) GetTitleRU() string {
	if x != nil {
		return x.TitleRU
	}
	return ""
}

func (x *Movie) GetTitleEN() string {
	if x != nil {
		return x.TitleEN
	}
	return ""
}

func (x *Movie) GetBudget() string {
	if x != nil {
		return x.Budget
	}
	return ""
}

func (x *Movie) GetCastID() int32 {
	if x != nil {
		return x.CastID
	}
	return 0
}

func (x *Movie) GetGenresIDs() []int32 {
	if x != nil {
		return x.GenresIDs
	}
	return nil
}

func (x *Movie) GetDirectorsIDs() []int32 {
	if x != nil {
		return x.DirectorsIDs
	}
	return nil
}

func (x *Movie) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Movie) GetCountriesIDs() []int32 {
	if x != nil {
		return x.CountriesIDs
	}
	return nil
}

func (x *Movie) GetPosterPictureURL() string {
	if x != nil {
		return x.PosterPictureURL
	}
	return ""
}

func (x *Movie) GetReleaseYear() int32 {
	if x != nil {
		return x.ReleaseYear
	}
	return 0
}

type Movies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movies map[string]*Movie `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Movies) Reset() {
	*x = Movies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movies_service_v1_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Movies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movies) ProtoMessage() {}

func (x *Movies) ProtoReflect() protoreflect.Message {
	mi := &file_movies_service_v1_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movies.ProtoReflect.Descriptor instead.
func (*Movies) Descriptor() ([]byte, []int) {
	return file_movies_service_v1_messages_proto_rawDescGZIP(), []int{3}
}

func (x *Movies) GetMovies() map[string]*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

type UserErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UserErrorMessage) Reset() {
	*x = UserErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_movies_service_v1_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserErrorMessage) ProtoMessage() {}

func (x *UserErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_movies_service_v1_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserErrorMessage.ProtoReflect.Descriptor instead.
func (*UserErrorMessage) Descriptor() ([]byte, []int) {
	return file_movies_service_v1_messages_proto_rawDescGZIP(), []int{4}
}

func (x *UserErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_movies_service_v1_messages_proto protoreflect.FileDescriptor

var file_movies_service_v1_messages_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x76, 0x31, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x69, 0x64,
	0x22, 0xbd, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x09, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x49,
	0x44, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x09, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x73, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a,
	0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x5f, 0x69, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x49, 0x44, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x73, 0x49, 0x44, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x49, 0x44, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x49, 0x44, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x22, 0xf1, 0x02, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x12, 0x19, 0x0a, 0x07, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x52, 0x55, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x5f, 0x72, 0x75, 0x12, 0x19, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x4e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x63, 0x61, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x49, 0x44, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x12,
	0x23, 0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x49, 0x44, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x5f, 0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x49, 0x44, 0x73,
	0x18, 0x13, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x10, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x50, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x12, 0x21, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x79, 0x65, 0x61, 0x72, 0x22, 0x96, 0x01, 0x0a, 0x06, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x12,
	0x3a, 0x0a, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x1a, 0x50, 0x0a, 0x0b, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2c, 0x0a,
	0x10, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x1a, 0x5a, 0x18, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_movies_service_v1_messages_proto_rawDescOnce sync.Once
	file_movies_service_v1_messages_proto_rawDescData = file_movies_service_v1_messages_proto_rawDesc
)

func file_movies_service_v1_messages_proto_rawDescGZIP() []byte {
	file_movies_service_v1_messages_proto_rawDescOnce.Do(func() {
		file_movies_service_v1_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_movies_service_v1_messages_proto_rawDescData)
	})
	return file_movies_service_v1_messages_proto_rawDescData
}

var file_movies_service_v1_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_movies_service_v1_messages_proto_goTypes = []interface{}{
	(*GetMovieRequest)(nil),  // 0: movies_service.GetMovieRequest
	(*GetMoviesRequest)(nil), // 1: movies_service.GetMoviesRequest
	(*Movie)(nil),            // 2: movies_service.Movie
	(*Movies)(nil),           // 3: movies_service.Movies
	(*UserErrorMessage)(nil), // 4: movies_service.UserErrorMessage
	nil,                      // 5: movies_service.Movies.MoviesEntry
}
var file_movies_service_v1_messages_proto_depIdxs = []int32{
	5, // 0: movies_service.Movies.movies:type_name -> movies_service.Movies.MoviesEntry
	2, // 1: movies_service.Movies.MoviesEntry.value:type_name -> movies_service.Movie
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_movies_service_v1_messages_proto_init() }
func file_movies_service_v1_messages_proto_init() {
	if File_movies_service_v1_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_movies_service_v1_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movies_service_v1_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMoviesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movies_service_v1_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Movie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movies_service_v1_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Movies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_movies_service_v1_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_movies_service_v1_messages_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_movies_service_v1_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_movies_service_v1_messages_proto_goTypes,
		DependencyIndexes: file_movies_service_v1_messages_proto_depIdxs,
		MessageInfos:      file_movies_service_v1_messages_proto_msgTypes,
	}.Build()
	File_movies_service_v1_messages_proto = out.File
	file_movies_service_v1_messages_proto_rawDesc = nil
	file_movies_service_v1_messages_proto_goTypes = nil
	file_movies_service_v1_messages_proto_depIdxs = nil
}
